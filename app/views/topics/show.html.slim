- if @topic.hidden_from_users
  h1 This topic has been deleted by a moderator
  p
    em
      = @topic.deletion_reason
  - if can?(:destroy, @topic)
    p
      = button_to 'Restore', forum_topic_hide_path(@forum, @topic), method: :delete, class: 'button'
  p
    a href=forum_path(@forum)
      ' Return to
      = @forum.name

- if !@topic.hidden_from_users || can?(:assist, @topic)
  h1
    = @topic.title
  / Header section
  .block
    .block__header
      a> href='/forums' Forums
      ' &raquo;
      a> href=short_forum_path(@forum)
        = @forum.name
      ' &raquo;
      a> href=short_topic_path(@forum, @topic)
        = @topic.title
      a href=posts_path(forum_id: @forum.id, subject: @topic.title)
        i.fa.fa-fw.fa-search>
        | Search Posts
    .flex.flex--wrap.block__header.block__header--light
      .flex--fixed
        = paginate @posts
      .flex--fixed.block__header__item
        ' Started by
        => @topic.author(can?(:manage, Topic))
      .flex--fixed.block__header__item
        ' Posted
        =< friendly_time(@topic.created_at)
      .flex--fixed.block__header__item
        => number_with_delimiter(@topic.post_count - 1)
        | replies
      - if current_user
        = subscription_link(@topic, current_user)
      - else
        | Login to subscribe to responses

  / Display the poll, if any
  = render partial: 'polls/display', locals: { poll: @topic.poll }

  / The actual posts
  .posts-area
    .post-list
      - avatar_type = :user
      - @posts.each do |post|
        - next if post.destroyed_content && !can?(:assist, Topic)
        include app/views/topics/posts/_post_cached.html.slim

      include ../adverts/_box.html.slim

    / Post editability data for JS
    .js-editable-posts data-editable=editable_communications(@posts).to_json

    / Footer section
    .block: .block__header.block__header--light = paginate @posts

    / Post form
    - if @topic.post_count < 200_000
      = render partial: 'topics/posts/form'
    - else
      h3 Okay, we're impressed
      p You're looking at a thread with over 200,000 posts in it!
      p For various reasons, we'd like to ask you to start a new topic.

    / Mod tools
    - if can? :assist, Topic
      .block__content
        input.toggle-box id="administrator_tools" type="checkbox" checked=false
        label for="administrator_tools" Topic Admin Tools
        .toggle-box-container
          .toggle-box-container__content
            p
              - if can?(:unlock, @topic) && !@topic.locked_at.nil?
                => button_to forum_topic_lock_path(@forum, @topic), method: :delete, class: 'button' do
                  i.fa.fa-lock>
                  | Unlock
              - if can?(:stick, @topic) && !@topic.sticky
                => button_to forum_topic_stick_path(@forum, @topic), method: :post, class: 'button' do
                  i.fa.fa-thumbtack>
                  | Stick
              - if can?(:stick, @topic) && @topic.sticky
                => button_to forum_topic_stick_path(@forum, @topic), method: :delete, class: 'button' do
                  i.fa.fa-thumbtack>
                  | Unstick
            - if can?(:lock, @topic) && @topic.locked_at.nil?
              = form_tag forum_topic_lock_path(@forum, @topic), method: :post, class: 'hform' do
                .field
                  => text_field_tag :lock_reason, '', placeholder: 'Lock reason', class: 'input hform__text'
                  => button_tag class: 'hform__button button' do
                    i.fa.fa-unlock>
                    | Lock
            - if can? :move, @topic
              = form_tag forum_topic_move_path(@forum, @topic), method: :post, class: 'hform' do
                .field
                  => select_tag :target_forum_id, options_from_collection_for_select(Forum.where.not(id: @forum.id).all, :short_name, :name), class: 'input hform__text'
                  => button_tag class: 'hform__button button' do
                    i.fa.fa-truck>
                    | Move
            - if can?(:destroy, @topic) && !@topic.hidden_from_users
              = form_tag forum_topic_hide_path(@forum, @topic), method: :post, class: 'hform' do
                .field
                  => text_field_tag :deletion_reason, '', placeholder: 'Deletion reason', required: true, class: 'input hform__text'
                  => button_tag class: 'hform__button button' do
                    i.fa.fa-trash>
                    | Delete
